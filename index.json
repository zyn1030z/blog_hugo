[{"content":"ReactJS l√† m·ªôt Javascript framework r·∫•t ph·ªï bi·∫øn v·ªõi gi·ªõi l·∫≠p tr√¨nh Web Frontend hi·ªán nay, s·ªë l∆∞·ª£ng tuy·ªÉn d·ª•ng l·∫≠p tr√¨nh vi√™n ReactJS c≈©ng r·∫•t l·ªõn. Do ƒë√≥ nhi·ªÅu ng∆∞·ªùi m·ªõi h·ªçc Web Frontend sau khi h·ªçc xong m·ªôt ch√∫t HTML CSS JS l√† mu·ªën nh·∫£y v√†o l·∫≠p tr√¨nh ReactJS ngay. ƒêi·ªÅu n√†y d·∫´n ƒë·∫øn h·ªá l·ª•y l√† c√°c b·∫°n s·∫Ω b·ªã h·ªïng ki·∫øn th·ª©c c∆° b·∫£n, ho·∫∑c khi h·ªçc ReactJS s·∫Ω r·∫•t ch·∫≠t v·∫≠t v√¨ kh√¥ng hi·ªÉu c√∫ ph√°p, kh√¥ng hi·ªÉu b·∫£n ch·∫•t, ‚Ä¶\nV·∫≠y tr∆∞·ªõc khi h·ªçc ReactJS ho·∫∑c React Native, c√°c b·∫°n n√™n n·∫µm v·ªØng HTML CSS v√† nh·ªØng ki·∫øn th·ª©c sau trong JavaScript (ngo√†i c√°c ki·∫øn th·ª©c ban ƒë·∫ßu nh∆∞ bi·∫øn, v√≤ng l·∫∑p, ƒëi·ªÅu ki·ªán, ‚Ä¶):\n C√°c h√†m x·ª≠ l√Ω m·∫£ng nh∆∞ map, filter, reduce, push, splice, ‚Ä¶  ES6/ES7 Class (m·∫∑c d√π hi·ªán t·∫°i code ReactJS ƒëang d·∫ßn chuy·ªÉn sang h∆∞·ªõng function nh∆∞ng v·∫´n n√™n bi·∫øt).\nVariable scope v√† closure C·∫ßn n·∫Øm v·ªØng kh√°i ni·ªám Scope (code block, nested function, ‚Ä¶) trong Javascript. Khai b√°o bi·∫øn th√¨ s·ª≠ d·ª•ng let thay cho var (ki·ªÉu c≈©), v·ªõi h·∫±ng s·ªë ho·∫∑c magic number th√¨ d√πng const.\nKh√°i ni·ªám closure th√¨ h∆°i kh√≥ hi·ªÉu nh∆∞ng c≈©ng n√™n t√¨m hi·ªÉu tr∆∞·ªõc ƒë·ªÉ khi g·∫∑p kh√¥ng b·ªã b·ª° ng·ª° üòÖ.\nImport v√† Exports Trong c√°c project ch√∫ng ta s·∫Ω c√≥ nhi·ªÅu file ƒë·ªÉ ƒë·∫£m b·∫£o code ng·∫Øn g·ªçn v√† d·ªÖ b·∫£o tr√¨. C·∫ßn ch√∫ √Ω gi·ªØa named export v√† default export.\nV√≠ d·ª• /* * File util.js */ // export m·ªôt m·∫£ng export let month = [ \u0026quot;Jan\u0026quot;, \u0026quot;Feb\u0026quot;, \u0026quot;Mar\u0026quot;, \u0026quot;Apr\u0026quot;, \u0026quot;Aug\u0026quot;, \u0026quot;Sep\u0026quot;, \u0026quot;Oct\u0026quot;, \u0026quot;Nov\u0026quot;, \u0026quot;Dec\u0026quot;, ]; // export m·ªôt h·∫±ng s·ªë export const YEAR = 2020; // export m·ªôt class export class User { constructor(name) { this.name = name; } } Arrow function Arrow function ƒë∆∞·ª£c s·ª≠ d·ª•ng kh√° nhi·ªÅu b·ªüi c√°ch vi·∫øt ng·∫Øn g·ªçn v√† kh√¥ng c√≥ ‚Äúthis‚Äù.\nV√≠ d·ª• v·ªõi function th√¥ng th∆∞·ªùng:\nfunction sum(a, b) { return a + b; } Vi·∫øt l·∫°i b·∫±ng arrow function:\nconst sum = (a, b) =\u0026gt; a + b; Destructuring assignment L√† c√∫ ph√°p cho ph√©p t√°ch c√°c object, array ra th√†nh c√°c bi·∫øn, gi√∫p cho code ng·∫Øn g·ªçn h∆°n thay v√¨ khai b√°o bi·∫øn nhi·ªÅu l·∫ßn. V√≠ d·ª• hay s·ª≠ d·ª•ng trong ReactJS:\n// Kh√¥ng s·ª≠ d·ª•ng destructuring assignment function MyComponent(props) { let navigation = props.navigation; let route = props.route; ... } // S·ª≠ d·ª•ng destructuring assignment function MyComponent({navigation, route}) { ... } Ho·∫∑c khi s·ª≠ d·ª•ng useState hook:\nfunction MyComponent() { const [count, setCount] = React.useState(0); } Rest parameters and spread syntax Rest parameters cho ph√©p ch√∫ng ta vi·∫øt 1 h√†m v·ªõi s·ªë l∆∞·ª£ng tham s·ªë l√† linh ƒë·ªông (kh√¥ng bi·∫øt tr∆∞·ªõc). V√≠ d·ª•:\nfunction sumAll(...args) { // args l√† t√™n bi·∫øn ƒë·∫°i di·ªán cho m·∫£ng c√°c tham s·ªë let sum = 0; for (let arg of args) sum += arg; return sum; } alert(sumAll(1)); // 1 alert(sumAll(1, 2)); // 3 alert(sumAll(1, 2, 3)); // 6 ho·∫∑c:\nfunction showName(firstName, lastName, ...otherNames) { alert(firstName + \u0026quot; \u0026quot; + lastName); // Robin Huy // Rest parameters ...otherNames ƒë·∫°i di·ªán cho c√°c tham s·ªë c√≤n l·∫°i ngo√†i 2 tham s·ªë ƒë·∫ßu ti√™n // v√≠ d·ª• ·ªü ƒë√¢y otherNames s·∫Ω l√† [\u0026quot;Robin\u0026quot;, \u0026quot;Huy\u0026quot;] alert(otherNames[0]); // Chris alert(otherNames[1]); // Robert alert(otherNames.length); // 2 } showName(\u0026quot;Robin\u0026quot;, \u0026quot;Huy\u0026quot;, \u0026quot;Chris\u0026quot;, \u0026quot;Robert\u0026quot;); Spread syntax c√≥ c√∫ ph√°p v√† c√°ch ho·∫°t ƒë·ªông g·∫ßn gi·ªëng nh∆∞ rest parameters, n√≥ cho ph√©p ‚Äúdu·ªói‚Äù m·ªôt object ho·∫∑c array ra th√†nh nhi·ªÅu bi·∫øn. V√≠ d·ª•:\n// H√†m Math.max c·∫ßn truy·ªÅn v√†o c√°c s·ªë ƒë·ªÉ t√≠nh max alert(Math.max(1, 3, 5, 2)); // Tr·∫£ v·ªÅ 5 // Tuy nhi√™n n·∫øu c√≥ 1 m·∫£ng c√°c s·ªë th√¨ ch√∫ng ta c√≥ th·ªÉ spread m·∫£ng ƒë√≥ ra ƒë·ªÉ s·ª≠ d·ª•ng h√†m Math.max const numbers = [1, 3, 5, 2]; alert(Math.max(numbers)); // Tr·∫£ v·ªÅ NaN alert(Math.max(...numbers)); // Tr·∫£ v·ªÅ 5 C√°c h√†m x·ª≠ l√Ω m·∫£ng Code ReactJS s·∫Ω ph·∫£i l√†m vi·ªác v·ªõi m·∫£ng r·∫•t nhi·ªÅu n√™n ph·∫£i s·ª≠ d·ª•ng th√†nh th·∫°o c√°c ph∆∞∆°ng th·ª©c x·ª≠ l√Ω m·∫£ng nh∆∞: map, filter, reduce, push, splice, ‚Ä¶\nV√≠ d·ª• s·ª≠ d·ª•ng ph∆∞∆°ng th·ª©c map k·∫øt h·ª£p arrow function:\nconst numbers = [1, 2, 3, 4, 5]; const doubled = numbers.map((number) =\u0026gt; number * 2); Ho·∫∑c s·ª≠ d·ª•ng filter ƒë·ªÉ l·ªçc ph·∫ßn t·ª≠ ra kh·ªèi m·∫£ng:\n// X√≥a 1 s·∫£n ph·∫©m ra kh·ªèi m·∫£ng c√°c s·∫£n ph·∫©m d·ª±a theo ID truy·ªÅn v√†o function removeProduct(productId) { const newProducts = products.filter((product) =\u0026gt; product.id !== productId); setProducts(newProducts); } Tr√™n ƒë√¢y l√† m·ªôt v√†i ki·∫øn th·ª©c c∆° b·∫£n m√¨nh nghƒ© newbie c·∫ßn ph·∫£i bi·∫øt tr∆∞·ªõc khi h·ªçc ReactJS. N·∫øu c√°c b·∫°n th·∫•y c√≤n thi·∫øu th√¨ g√≥p √Ω b·ªï sung gi√∫p m√¨nh ·ªü ph·∫ßn b√¨nh lu·∫≠n b√™n d∆∞·ªõi nh√© üòò.\n","permalink":"https://hungpt.info/posts/kien-thuc-javascript-co-ban-can-phai-biet-truoc-khi-hoc-react-native-reactjs/","summary":"\u003cp\u003eReactJS l√† m·ªôt Javascript framework r·∫•t ph·ªï bi·∫øn v·ªõi gi·ªõi l·∫≠p tr√¨nh Web Frontend hi·ªán nay, s·ªë l∆∞·ª£ng tuy·ªÉn d·ª•ng l·∫≠p tr√¨nh vi√™n ReactJS c≈©ng r·∫•t l·ªõn. Do ƒë√≥ nhi·ªÅu ng∆∞·ªùi m·ªõi h·ªçc Web Frontend sau khi h·ªçc xong m·ªôt ch√∫t HTML CSS JS l√† mu·ªën nh·∫£y v√†o l·∫≠p tr√¨nh ReactJS ngay. ƒêi·ªÅu n√†y d·∫´n ƒë·∫øn h·ªá l·ª•y l√† c√°c b·∫°n s·∫Ω b·ªã h·ªïng ki·∫øn th·ª©c c∆° b·∫£n, ho·∫∑c khi h·ªçc ReactJS s·∫Ω r·∫•t ch·∫≠t v·∫≠t v√¨ kh√¥ng hi·ªÉu c√∫ ph√°p, kh√¥ng hi·ªÉu b·∫£n ch·∫•t, ‚Ä¶\u003c/p\u003e","title":"Ki·∫øn th·ª©c Javascript c∆° b·∫£n c·∫ßn ph·∫£i bi·∫øt tr∆∞·ªõc khi h·ªçc ReactJS"},{"content":"Kh√¥ng l·∫≠p tr√¨nh vi√™n n√†o code m√† kh√¥ng c√≥ bug. Tuy nhi√™n c√≥ r·∫•t nhi·ªÅu l·ªói c∆° b·∫£n ch√∫ng ta n√™n tr√°nh ƒë·ªÉ t·∫°o ra √≠t bug h∆°n, code s·∫°ch v√† trong s√°ng h∆°n, d·ªÖ b·∫£o tr√¨ h∆°n, ƒë·ª° b·ªã ƒÉn ch·ª≠i h∆°n, ‚Ä¶\n1. X·ª≠ l√Ω qu√° nhi·ªÅu th·ª© trong m·ªôt function Theo nguy√™n t·∫Øc Single Responsibility, m·ªôt function ch·ªâ n√™n th·ª±c hi·ªán m·ªôt v√† ch·ªâ m·ªôt nhi·ªám v·ª• duy nh·∫•t. Nhi·ªÅu l·∫≠p tr√¨nh vi√™n hay vi·∫øt m·ªôt function v·ª´a l·∫•y d·ªØ li·ªáu, x·ª≠ l√Ω d·ªØ li·ªáu v√† hi·ªÉn th·ªã d·ªØ li·ªáu. Thay v√¨ nh∆∞ v·∫≠y, h√£y chia nh·ªè function n√†y ra l√†m 3 function: Function l·∫•y d·ªØ li·ªáu, function x·ª≠ l√Ω d·ªØ li·ªáu v√† function hi·ªÉn th·ªã d·ªØ li·ªáu.\nVi·ªác gi·ªØ m·ªôt function ch·ªâ t·∫≠p trung th·ª±c hi·ªán m·ªôt nhi·ªám v·ª• s·∫Ω gi√∫p code d·ªÖ ƒë·ªçc v√† d·ªÖ b·∫£o tr√¨ h∆°n. Nh∆∞ v√≠ d·ª• tr√™n, gi·∫£ s·ª≠ API ƒë·ªÉ l·∫•y d·ªØ li·ªáu b·ªã thay ƒë·ªïi th√¨ ta ch·ªâ c·∫ßn c·∫≠p nh·∫≠t l·∫°i function l·∫•y d·ªØ li·ªáu, kh√¥ng b·ªã ·∫£nh h∆∞·ªüng ƒë·∫øn c√°c thao t√°c ·ªü sau.\n2. Code b·ªã comment Trong m·ªôt ·ª©ng d·ª•ng l·ªõn c√≥ nhi·ªÅu l·∫≠p tr√¨nh vi√™n tham gia, nhi·ªÅu khi b·∫°n s·∫Ω th·∫•y c√≥ c√°c h√†m, c√°c ƒëo·∫°n code l·ªõn b·ªã comment. B·∫°n s·∫Ω kh√¥ng hi·ªÉu ƒëo·∫°n code b·ªã comment n√†y ƒë·ªÉ l√†m g√¨, √Ω ƒë·ªì c·ªßa t√°c gi·∫£ l√† g√¨. C√°c l·∫≠p tr√¨nh vi√™n kh√°c c√≥ th·ªÉ s·∫Ω kh√¥ng d√°m xo√° ƒëo·∫°n code n√†y v√¨ c√≥ th·ªÉ t√°c gi·∫£ c·ªßa ƒëo·∫°n comment c√≤n c·∫ßn ƒë·∫øn n√≥.\nN·∫øu g·∫∑p tr∆∞·ªùng h·ª£p nh∆∞ v·∫≠y v√† project c√≥ s·ª≠ d·ª•ng h·ªá th·ªëng qu·∫£n l√Ω code nh∆∞ git, svn, ‚Ä¶ th√¨ h√£y m·∫°nh d·∫°n xo√° ƒëo·∫°n code n√†y ƒëi, code s·∫Ω tr·ªü n√™n s·∫°ch ƒë·∫πp h∆°n. C√≤n sau n√†y n·∫øu t√°c gi·∫£ c·ªßa ƒëo·∫°n code ƒë√≥ mu·ªën t√¨m l·∫°i th√¨ h·ªç s·∫Ω ph·∫£i t·ª± t√¨m trong c√°c commit c≈©.\n3. ƒê·∫∑t t√™n bi·∫øn, t√™n h√†m kh√¥ng r√µ r√†ng ƒê·∫∑t t√™n bi·∫øn l√† m·ªôt c√¥ng vi·ªác kh√≥ nh∆∞ng c≈©ng r·∫•t quan tr·ªçng. M·ªôt t√™n bi·∫øn r√µ r√†ng s·∫Ω gi√∫p vi·ªác ƒë·ªçc code tr·ªü n√™n d·ªÖ d√†ng, d·ªÖ hi·ªÉu.\nH√£y ƒë·∫∑t t√™n bi·∫øn m√¥ t·∫£ ƒë√∫ng ch·ª©c nƒÉng, √Ω nghƒ©a c·ªßa n√≥, d√†i m·ªôt ch√∫t c≈©ng ƒë∆∞·ª£c. Tr√°nh ƒë·∫∑t t√™n bi·∫øn ki·ªÉu vi·∫øt t·∫Øt (tr·ª´ tr∆∞·ªùng h·ª£p ph·ªï bi·∫øn ho·∫∑c ƒë√£ th·ªëng nh·∫•t t·ª´ tr∆∞·ªõc) ho·∫∑c t√™n bi·∫øn kh√¥ng c√≥ √Ω nghƒ©a nh∆∞ a, b, c, ‚Ä¶\n4. Magic number v√† string Magic number v√† string l√† c√°c gi√° tr·ªã duy nh·∫•t ƒë∆∞·ª£c s·ª≠ d·ª•ng nhi·ªÅu l·∫ßn trong ·ª©ng d·ª•ng m√† kh√¥ng c√≥ gi·∫£i th√≠ch √Ω nghƒ©a r√µ r√†ng. Nh·ªØng gi√° tr·ªã n√†y ho√†n to√†n c√≥ th·ªÉ thay th·∫ø b·∫±ng c√°c bi·∫øn (v·ªõi ƒëi·ªÅu ki·ªán bi·∫øn ph·∫£i ƒë∆∞·ª£c ƒë·∫∑t t√™n m·ªôt c√°ch r√µ r√†ng).\nV√≠ d·ª• v·ªõi ƒëo·∫°n code sau:\nfor ($i = 1; $i \u0026lt;= 52; $i++) { ... } Trong v√≠ d·ª• tr√™n th√¨ 52 l√† m·ªôt magic number, v√† ng∆∞·ªùi ƒë·ªçc code s·∫Ω kh√¥ng hi·ªÉu ƒë∆∞·ª£c 52 c√≥ √Ω nghƒ©a l√† g√¨. Th·∫≠m ch√≠ k·ªÉ c·∫£ t√°c gi·∫£ ƒëo·∫°n code, sau m·ªôt th·ªùi gian quay l·∫°i ƒë·ªçc code c·ªßa m√¨nh c≈©ng kh√¥ng hi·ªÉu, ph·∫£i d√≤ l·∫°i to√†n b·ªô ch∆∞∆°ng tr√¨nh.\nƒêo·∫°n code tr√™n c√≥ th·ªÉ vi·∫øt l·∫°i nh∆∞ sau:\n$cardDeckSize = 52; for ($i = 1; $i \u0026lt;= $cardDeckSize; $i++) { ... } Nh∆∞ v·∫≠y ƒë·ªçc ƒëo·∫°n code n√†y s·∫Ω hi·ªÉu ngay l√† ƒëang th·ª±c hi·ªán m·ªôt v√≤ng l·∫∑p qua t·ª´ng qu√¢n b√†i trong b·ªô b√†i v√† 52 c√≥ nghƒ©a l√† s·ªë l√° b√†i trong b·ªô b√†i. ·ªû c√°c ph·∫ßn b√™n d∆∞·ªõi c≈©ng c√≥ th·ªÉ d√πng l·∫°i bi·∫øn $cardDeckSize v√† khi c·∫ßn thay ƒë·ªïi gi√° tr·ªã s·ªë l∆∞·ª£ng l√° b√†i trong b·ªô b√†i ta c≈©ng ch·ªâ c·∫ßn thay ƒë·ªïi gi√° tr·ªã c·ªßa bi·∫øn n√†y m·ªôt l·∫ßn duy nh·∫•t thay v√¨ ph·∫£i s·ª≠a nhi·ªÅu ch·ªó.\nT∆∞∆°ng t·ª± v·ªõi number, ch√∫ng ta c≈©ng c√≥ magic string:\n... } v√† code s·∫Ω tr·ªü n√™n d·ªÖ hi·ªÉu h∆°n.\n5. Code format l·ªôn x·ªôn V·ªõi nh·ªØng l·∫≠p tr√¨nh vi√™n kh√¥ng c√≥ kinh nghi·ªám v√† c·∫©u th·∫£ th√¨ h·ªç s·∫Ω vi·∫øt code l·ªôn x·ªôn, kh√¥ng c√≥ format. Code kh√¥ng format s·∫Ω r·∫•t kh√≥ ƒë·ªçc v√† d·ªÖ d·∫´n ƒë·∫øn code sai c√∫ ph√°p v√† r·∫•t kh√≥ debug. V√≠ d·ª• nh∆∞ code HTML c√≥ th·∫ª m·ªü m√† kh√¥ng c√≥ th·∫ª ƒë√≥ng d·∫´n ƒë·∫øn sai c·∫•u tr√∫c code l√†m h·ªèng c·∫£ CSS, l·ªói n√†y c≈©ng kh√≥ debug v√¨ d√π code sai th√¨ c≈©ng s·∫Ω kh√¥ng b√°o l·ªói l√™n tr√¨nh duy·ªát.\nƒêa s·ªë c√°c IDE ho·∫∑c code editor hi·ªán ƒë·∫°i ƒë·ªÅu c√≥ h·ªó tr·ª£ ch·ª©c nƒÉng format code theo t·ª´ng ng√¥n ng·ªØ, ho·∫∑c l√† ng∆∞·ªùi d√πng ch·ªß ƒë·ªông c√†i th√™m c√°c plugin, extension h·ªó tr·ª£ cho vi·ªác format code. Trong m·ªôt project n·∫øu c√°c l·∫≠p tr√¨nh vi√™n d√πng chung m·ªôt chu·∫©n format code c≈©ng s·∫Ω gi√∫p code ƒë·ªìng b·ªô v√† √≠t b·ªã xung ƒë·ªôt.\n6. Hard code Hard code l√† nh·∫≠p d·ªØ li·ªáu tr·ª±c ti·∫øp v√†o trong source code, d·ªØ li·ªáu n√†y b·ªã fix c·ª©ng v√† kh√¥ng thay ƒë·ªïi, c·∫•u h√¨nh ƒë∆∞·ª£c.\nTrong m·ªôt s·ªë tr∆∞·ªùng h·ª£p ch√∫ng ta v·∫´n d√πng hard code, tuy nhi√™n n·∫øu code c·ªßa b·∫°n b·ªã hard code qu√° nhi·ªÅu t·ª©c l√† ƒëang c√≥ v·∫•n ƒë·ªÅ. Thay v√¨ hard code d·ªØ li·ªáu trong source code, h√£y t√°ch ch√∫ng ra b·∫±ng c√°ch l·∫•y d·ªØ li·ªáu qua file c·∫•u h√¨nh, l·∫•y t·ª´ c∆° s·ªü d·ªØ li·ªáu ho·∫∑c API, hay qua bi·∫øn m√¥i tr∆∞·ªùng, ‚Ä¶\nB√†i vi·∫øt ƒë∆∞·ª£c bi√™n d·ªãch l·∫°i t·ª´ medium.com.üòÄüòÄ\n","permalink":"https://hungpt.info/posts/markdown-syntax.fa/","summary":"\u003cp\u003eKh√¥ng l·∫≠p tr√¨nh vi√™n n√†o code m√† kh√¥ng c√≥ bug. Tuy nhi√™n c√≥ r·∫•t nhi·ªÅu l·ªói c∆° b·∫£n ch√∫ng ta n√™n tr√°nh ƒë·ªÉ t·∫°o ra √≠t bug h∆°n, code s·∫°ch v√† trong s√°ng h∆°n, d·ªÖ b·∫£o tr√¨ h∆°n, ƒë·ª° b·ªã ƒÉn ch·ª≠i h∆°n, ‚Ä¶\u003c/p\u003e","title":"Nh·ªØng l·ªói c∆° b·∫£n trong l·∫≠p tr√¨nh m√† developer n√™n tr√°nh"}]